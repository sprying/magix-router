<template>
  <a href="<%=link%>" mx-click="goLink()" class="<%=activeClass%> <%=linkClass%>"><%!content%></a>
</template>

<style>
  .router-link{
    color: #0066dd;
  }
 .router-link-active {
   color: #F40;
 }
  .router-link-exact-active{
    color: #F40;
  }
</style>

<script>
  const encodingMap = {
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    '&': '&amp;',
    '\n': '&#10;',
    '\t': '&#9;'
  }
  const encodedAttrWithNewLines = /<|>|"|&|\n|\t/g
  const defaultOptions = {
    to: '',
    exact: false,
    append: true,
    replace: false,
    linkClass: null,
    activeClass: null,
    exactActiveClass: null
  }
  const { View, applyStyle } = require('magix')
  const { createRoute, isSameRoute, isIncludedRoute } = require('./magix-router.common')

  applyStyle('@style.less')

  module.exports = View.extend({
    tmpl: '@template.html',
    init (options) {
      Object.assign(this, {...defaultOptions, ...options})
    },
    render () {
      const router = this.router
      const current = this.route
      const { location, route, href } = router.resolve(this.to, current, this.append)

      this.location = location
      let owner = this.owner
      owner.hasLinkView = true

      const globalLinkClass = router.options.linkClass
      const globalActiveClass = router.options.linkActiveClass
      const globalExactActiveClass = router.options.linkExactActiveClass
      // Support global empty active class
      const linkClassFallback = globalActiveClass == null
        ? '@style.less:router-link'
        : globalActiveClass
      const activeClassFallback = globalActiveClass == null
        ? '@style.less:router-link-active'
        : globalActiveClass
      const exactActiveClassFallback = globalExactActiveClass == null
        ? '@style.less:router-link-exact-active'
        : globalExactActiveClass
      const linkClass = this.linkClass == null
        ? linkClassFallback
        : this.linkClass
      const activeClass = this.activeClass == null
        ? activeClassFallback
        : this.activeClass
      const exactActiveClass = this.exactActiveClass == null
        ? exactActiveClassFallback
        : this.exactActiveClass
      const compareTarget = location.path
        ? createRoute(null, location, null, router)
        : route

      this.updater.digest({
        link: href,
        content: this.content,
        activeClass: this.exact
        ? isSameRoute(current, compareTarget)? exactActiveClass: ''
        : isIncludedRoute(current, compareTarget)? activeClass: '',
        linkClass: linkClass,
      })
    },
    'goLink<click>' (e) {
      e.preventDefault()
      const {router, location} = this
      if (this.replace) {
        router.replace(location)
      } else {
        router.push(location)
      }
    }
  })
</script>
